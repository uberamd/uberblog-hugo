<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>openshift on steves ramblings</title>
    <link>https://www.stevem.io/tags/openshift/</link>
    <description>Recent content in openshift on steves ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 Jan 2017 07:23:40 -0600</lastBuildDate><atom:link href="https://www.stevem.io/tags/openshift/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>getting started with openshift v3 on vmware</title>
      <link>https://www.stevem.io/post/getting-started-with-openshift-v3-on-vmware/</link>
      <pubDate>Tue, 10 Jan 2017 07:23:40 -0600</pubDate>
      
      <guid>https://www.stevem.io/post/getting-started-with-openshift-v3-on-vmware/</guid>
      <description>Goal After following this tutorial you should end up with a functional environment running OpenShift Origin. This environment will consist of 1 Master and 4 Nodes which isn&amp;rsquo;t a fully production-ready environment as ideally you will have multiple masters. We will be taking advantage of the OpenShift Ansible repository to tackle a majority of the heavy lifting, thus most of these steps fit into the &amp;ldquo;prep work&amp;rdquo; and &amp;ldquo;testing that everything worked as planned&amp;rdquo; category.</description>
    </item>
    
    <item>
      <title>moving to hugo</title>
      <link>https://www.stevem.io/post/moving-to-hugo/</link>
      <pubDate>Tue, 06 Dec 2016 23:44:11 -0600</pubDate>
      
      <guid>https://www.stevem.io/post/moving-to-hugo/</guid>
      <description>Custom beginnings Back in 2014 I wrote a simple blog CMS in Ruby on Rails. It didn&amp;rsquo;t have the most features in the world but did have all the functionality I needed at the time, which included:
 Uploading images to AWS S3 and storing multiple sizes Visual editor for the Admin area Post tagging Syntax highlighting Comment system  It was pretty barebones but worked well enough. There was one major &amp;ldquo;shortcoming&amp;rdquo;, and that was the reliance on a database for storing posts.</description>
    </item>
    
  </channel>
</rss>
